#!/bin/bash

function take_photos() {
    echo "Taking photos..."
    local frames=$1
    local photopath=$2

    # we should ensure that a $photopath directory exists
    mkdir -p $photopath

    pushd $photopath
    gphoto2 --auto-detect --interval=1 --frames=$frames --capture-image-and-download --filename "20%y-%m-%d_%H:%M:%S.%C"
    popd
}

function detect_format() {
    # detect format
    local photopath=$1
    echo "Detecting format..."
    format=`ls $photopath -ltp | grep -v / | grep -v total | head -n1 | grep -Eo "(JPG|NEF)"`
    echo "Format: $format"
}

function make_thumbnails() {
    # make thumbnails
    local format=$1
    local frames=$2
    local shrink_factor=$3
    local photopath=$4
    local outpath=$5

    echo "Making thumbnails..."
    if [ "$format" == "NEF" ]; then
	find $photopath -name "*.$format" -print | sort -r | head -n $frames | xargs ufraw-batch --shrink=$shrink --out-type=jpg --out-path=$outpath --overwrite
    elif [ "$format" == "JPG" ]; then
        # let's just use PIL
	find $photopath -name "*.$format" -print | sort -r | head -n $frames | xargs -I {} $DIR/resize.py -o $outpath -s $shrink {}

        # let's make sure we kill all those uppercase JPGs
	pushd $outpath
	for FILE in *.JPG; do mv $FILE ${FILE%.JPG}.jpg; done
	popd
    fi
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# ok let's get this show on the road
photopath=$1
outpath=$2
num_frames=$3
shrink=10

take_photos $num_frames $photopath
detect_format $photopath # sets global_var $format
make_thumbnails $format $num_frames $shrink $photopath $outpath

